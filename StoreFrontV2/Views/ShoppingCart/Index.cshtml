@model Dictionary<int, StoreFrontV2.Models.CartItemViewModel>

@{
    ViewBag.Title = "Shopping Cart";

    decimal? cartTotal = 0;
    int totalCountOfItems = 0;
}

<p class="text-right">
    @Html.ActionLink("Back to Shopping Cart", "Index", "Oddities", null, new { @class = "btn btn-warning" })
</p>

@if (Model.Count == 0)
{
    <p class="alert alert-warning">
        @ViewBag.Message
    </p>
}
else
{
    <table class="table">
        <tr>
            <th>
                Oddity Name
            </th>
            <th>
                Quantity
            </th>
            <th>
                Recovery Date
            </th>
            <th>
                Price
            </th>
            <th>
                Total Price
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a href="@Url.Action("Details", "Oddities", new RouteValueDictionary(new { id = item.Value.Product.OddityID }))">
                        @item.Value.Product.OddityName
                    </a>
                </td>
                <td>
                    @using (Html.BeginForm("UpdateCart", "ShoppingCart", FormMethod.Post))
                    {
                        @Html.Hidden("oddityID", item.Value.Product.OddityID)
                        @Html.TextBox("qty", item.Value.Qty, new { @class = "form-control", @style = "max-width: 50px; display:inline" })
                        <input type="submit" value="Update Quantity" class="btn btn-warning" />
                    }

                    @{
                        totalCountOfItems += item.Value.Qty;
                    }
                </td>
                <td>
                    @string.Format($"{item.Value.Product.RecoveryDate:d}")
                </td>
                <td>
                    @string.Format($"{item.Value.Product.Price:c}")
                </td>
                <td>
                    @{
                        decimal? lineTotal = item.Value.Product.Price * item.Value.Qty;
                        cartTotal += lineTotal;
                    }
                    @string.Format($"{lineTotal:c}")
                </td>
                <td>
                    @Html.ActionLink("Remove From Cart", "RemoveFromCart", new { id = item.Value.Product.OddityID })
                </td>

            </tr>
        }

    </table>
}
<p class="alert alert-success text-center" style="font-size: 1.25em">
    You have @totalCountOfItems item(s) in your cart.
    Your total before taxes and shipping is @string.Format($"{cartTotal:c}")
</p>